/**
 * Module Description
 * 
 * Version    Date            Author           Remarks
 * 1.00       04 Feb 2018     kollidam
 *
 */

/**
 * @param {String} type Context Types: scheduled, ondemand, userinterface, aborted, skipped
 * @returns {Void}
 */
function scheduled(type) {
	
	var context = nlapiGetContext();
	var processFolder = 242;
	var ProcessedFolder = 243;
	var searchFilters = new Array();
	searchFilters.push(new nlobjSearchFilter('folder',null,'is',processFolder));
	var totalFiles = nlapiSearchRecord('file',null,searchFilters, null); //10units
	if(totalFiles)
	{
        nlapiLogExecution('Audit', 'Files Length', totalFiles.length);
		for(var t = 0; t < totalFiles.length; t++)
		{
			
			
			 var usage = context.getRemainingUsage();
			 nlapiLogExecution('emergency','usage',usage);
			if(usage <= 500){
		        
				
				
				var status = nlapiScheduleScript('customscript_create_inventory_adjustment','customdeploy_create_inventory_adjustment');
				
				nlapiLogExecution('debug','Status in FILE',status);
				if(status == 'QUEUED'){
					
					return;
				}
			
			}
			
			
			
			var fileID = totalFiles[t].getId();
			var fileObj = nlapiLoadFile(fileID);
			var fileName = fileObj.getName();
		 var flag = postJournal(fileObj,fileName,fileID);
		 nlapiLogExecution('emergency','FLAG',flag);
			if(flag == 'f'){
				
				return;
			}
			moveFile(fileObj,ProcessedFolder);
			
			nlapiLogExecution('audit','File Moved');
			
			
		}
	
	}


}

function postJournal(fileObj,fileName,fileID){
	var recordExists = 'F';
	nlapiLogExecution('audit','In Process Folder');
	var invalidDatas = new Array();
	var context = nlapiGetContext();
	
	var lineItems = new Array();
	var fileContent = fileObj.getValue();
	nlapiLogExecution('Debug','fileContent', fileContent);
	var arrayFileContent = fileContent.split('\n');
	var columns = arrayFileContent[0];
	var rows = new Array();
	var JsonRecords = [];
	for(var d=1; d < arrayFileContent.length; d++){
	   
	   rows.push(arrayFileContent[d]);
	}
}
